# All
f () {
    if [ -z "$1" ]; then
        find -L . -name \*.pyc -o -path '*/.git' -prune -o -type f -print | sort
    else
        find -L . -name \*.pyc -o -path '*/.git' -prune -o -type f -print0 | sort -z | xargs -0 egrep "$@"
    fi
}

# generic extension
ef () {
    ext=$1
    shift

    if [ -z "$ext" ]; then
        echo "Usage: ef [extension] [grep options] <grep search string>"
    elif [ -z "$1" ]; then
        find -L . -path '.git' -prune -o -type f -name "*.$ext" | sort
    else
        find -L . -path '.git' -prune -o -type f -name "*.$ext" -print0 | sort -z | xargs -0 egrep "$@"
    fi
}

# Java
jf () {
    ef java "$@"
}

# c/h
cf () {
    ef [ch] "$@"
}

# properties
pf () {
    ef properties "$@"
}

# xml
xf () {
    ef xml "$@"
}

# find by name
fn () {
    find -L . -path '.svn' -prune -o -name "$1"
}

src () {
    local count=1
    local dirs
    local path="src/main/java"

    if [ -n "$1" ]; then
       path="$1/$path"
    fi

    if [ ! -d $path ]; then
       return
    fi

    while [ $count = 1 ]; do
          dirs=$(find $path -maxdepth 1 -mindepth 1)
          count=$(echo $dirs | wc -w)
	  
          if [ $count = 1 ] && [ -d "$dirs" ]; then
             path=$dirs
          fi
    done

    cd $path
}
